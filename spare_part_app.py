# To run this app, ensure 'streamlit' is installed via: pip install streamlit
import pandas as pd
import os
from datetime import datetime

try:
    import streamlit as st
except ModuleNotFoundError:
    st = None
    import sys
    print("Streamlit is not installed. Please run 'pip install streamlit' to use the app.", file=sys.stderr)

if st:
    # Initial Setup
    st.set_page_config(page_title="Spare Part Manager", layout="wide")
    st.title("üì¶ Spare Part Management System")

    # File Storage
    DB_FILE = "spare_parts.csv"
    if not os.path.exists(DB_FILE):
        df = pd.DataFrame(columns=["Part No", "Name", "Category", "Stock", "Image Path", "History"])
        df.to_csv(DB_FILE, index=False)

    df = pd.read_csv(DB_FILE)

    def save_data():
        df.to_csv(DB_FILE, index=False)

    # Sidebar: Navigation
    menu = st.sidebar.radio("üìÇ ‡πÄ‡∏°‡∏ô‡∏π", [
        "üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û",
        "üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ / ‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà",
        "‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏° / ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç / ‡∏•‡∏ö ‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà",
        "üì§ ‡πÄ‡∏ö‡∏¥‡∏Å / ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å",
        "üìä Dashboard",
        "üìÅ Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"
    ])

    # Page 1: List with Images
    if menu == "üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û":
        st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà")
        for i, row in df.iterrows():
            col1, col2 = st.columns([1, 4])
            with col1:
                if os.path.exists(str(row["Image Path"])):
                    st.image(row["Image Path"], width=100)
                else:
                    st.warning("No image")
            with col2:
                st.markdown(f"**{row['Part No']} - {row['Name']}**")
                st.caption(f"‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà: {row['Category']} | ‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {row['Stock']}")

    # Page 2: Filter
    elif menu == "üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ / ‡∏Å‡∏£‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà":
        st.subheader("‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà")
        search = st.text_input("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢ Part No ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠")
        cat_filter = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà", ["All"] + sorted(df["Category"].dropna().unique()))

        filtered = df[df["Part No"].str.contains(search, case=False, na=False) | df["Name"].str.contains(search, case=False, na=False)]
        if cat_filter != "All":
            filtered = filtered[filtered["Category"] == cat_filter]

        st.dataframe(filtered)

    # Page 3: Add/Edit/Delete
    elif menu == "‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏° / ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç / ‡∏•‡∏ö ‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà":
        st.subheader("‡πÄ‡∏û‡∏¥‡πà‡∏° / ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç / ‡∏•‡∏ö")
        action = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥", ["‡πÄ‡∏û‡∏¥‡πà‡∏°", "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", "‡∏•‡∏ö"])
        selected_part = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ/‡∏•‡∏ö)", ["-"] + list(df["Part No"]))

        part_no = st.text_input("Part No")
        name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà")
        category = st.text_input("‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà")
        stock = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠", 0)
        image_path = st.text_input("Path ‡∏£‡∏π‡∏õ (‡πÄ‡∏ä‡πà‡∏ô C:/imgs/1.png)")

        if action == "‡πÄ‡∏û‡∏¥‡πà‡∏°" and st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà"):
            df.loc[len(df)] = [part_no, name, category, stock, image_path, ""]
            save_data()
            st.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")

        elif action == "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç" and selected_part != "-" and st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
            idx = df[df["Part No"] == selected_part].index[0]
            df.loc[idx] = [part_no, name, category, stock, image_path, df.loc[idx, "History"]]
            save_data()
            st.success("‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        elif action == "‡∏•‡∏ö" and selected_part != "-" and st.button("‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"):
            df.drop(df[df["Part No"] == selected_part].index, inplace=True)
            save_data()
            st.success("‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

    # Page 4: Issue/Add Stock
    elif menu == "üì§ ‡πÄ‡∏ö‡∏¥‡∏Å / ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å":
        st.subheader("‡πÄ‡∏ö‡∏¥‡∏Å / ‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏ï‡πä‡∏≠‡∏Å")
        selected_part = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Part No", df["Part No"])
        qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô", 0)
        user = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£")
        action = st.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó", ["‡πÄ‡∏ö‡∏¥‡∏Å", "‡πÄ‡∏ï‡∏¥‡∏°"])

        if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"):
            idx = df[df["Part No"] == selected_part].index[0]
            current_stock = df.loc[idx, "Stock"]
            new_stock = current_stock - qty if action == "‡πÄ‡∏ö‡∏¥‡∏Å" else current_stock + qty
            df.loc[idx, "Stock"] = new_stock
            df.loc[idx, "History"] += f"{datetime.now()} | {action} {qty} by {user}\n"
            save_data()
            st.success("‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

    # Page 5: Dashboard
    elif menu == "üìä Dashboard":
        st.subheader("Dashboard")
        st.metric("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", len(df))
        st.metric("‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà", len(df["Category"].unique()))
        st.metric("‡∏™‡∏ï‡πä‡∏≠‡∏Å‡∏£‡∏ß‡∏°", df["Stock"].sum())
        st.bar_chart(df.groupby("Category")["Stock"].sum())

    # Page 6: Export
    elif menu == "üìÅ Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô":
        st.subheader("Export ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô")
        file_name = f"spare_part_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
        df.to_excel(file_name, index=False)
        with open(file_name, "rb") as f:
            st.download_button("üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå Excel", f, file_name, mime="application/vnd.ms-excel")
else:
    print("Streamlit is not available in this environment. Please run this code in your local machine with Streamlit installed.")
